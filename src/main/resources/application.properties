
server.port=${port:5050}
logging.path=./logs/
weather.key=${weatherkey:00153ce0e2884aba9f121f2eaea06cc3}
weather.baseurl=https://api.heweather.com/



# ==============
# = WEI XIN
# ==============

we.serverUrl=https://api.weixin.qq.com/
we.grantType=client_credential
we.appid=wx2d83d8c4f89b6d92
we.secret=a1d6807491a879f17aebc7adce6b3619
we.customToken=engine


# =======================
# =   H2
# =======================
spring.h2.console.enabled=true

logging.level.org.hibernate.SQL=debug

## ===============================
## = DATA SOURCE (MYSQL)
## ===============================
#
## Set here configurations for the database connection
#
#spring.datasource.url = jdbc:mysql://localhost:3306/weappdb
#
## Username and password
#spring.datasource.username = root
#spring.datasource.password = engine
#
## Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1

## ===============================
## = JPA / HIBERNATE
## ===============================
#
## Use spring.jpa.properties.* for Hibernate native properties (the prefix is
## stripped before adding them to the entity manager).
#
## Show or not log for each sql query
#spring.jpa.show-sql = true
#
## Hibernate ddl auto (create, create-drop, update): with "update" the database
## schema will be automatically updated accordingly to java entities found in
## the project
#spring.jpa.hibernate.ddl-auto = update
#
## Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
#
## Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect